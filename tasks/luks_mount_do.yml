# Mount a luks-encrypted device
#
# This effectively extends the luks_device module to manage creating and
# removing key file, and mounts the device.
#
# Specify vars on include to control the mount:
#
#     vars:
#       luks_key: "{{ vault_luks_key }}"  # secret key string
#       luks_device: sda2                 # path relative to /dev
#       luks_name: lvx0    # Name of mount, presents as /dev/mapper/lvx0
#       luks_mount: /media/decrypted      # Mount point

- name: Create tmpfile for key file
  tempfile:
    state: file
  register: keyfile
  changed_when: false

- block:
    - name: Fill tmpfile
      copy:
        content: "{{ luks_key }}"
        dest: "{{ keyfile.path }}"
      changed_when: false

    - name: Open luks device
      luks_device:
        device: "/dev/{{ luks_device }}"
        state: opened
        name: "{{ luks_name }}"
        keyfile: "{{ keyfile.path }}"

  always:
    - name: Remove key file
      file:
        path: "{{ keyfile.path }}"
        state: absent
      when: keyfile.path is defined
      changed_when: false

- name: Mount device
  mount:
    src: "/dev/mapper/{{ luks_name }}"
    path: "{{ luks_mount }}"
    # Encrypted partitions need key file, can't mount on boot.
    opts: noauto
    fstype: auto
    state: mounted
